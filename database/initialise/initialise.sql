CREATE TABLE Role (
  UserRoleID   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  UserRoleName VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE Users (
  Username   VARCHAR(50) PRIMARY KEY,
  Password   VARCHAR(255) NOT NULL,
  UserRoleID INTEGER NOT NULL,
  FOREIGN KEY (UserRoleID) REFERENCES Role(UserRoleID)
);

CREATE TABLE Department (
  DepartmentID   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  DepartmentName VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE Supplier (
  SupplierID   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  SupplierName VARCHAR(200) NOT NULL UNIQUE,
  ContactName  VARCHAR(100),
  Phone        VARCHAR(20),
  Email        VARCHAR(100)
);

CREATE TABLE StockItem (
  StockItemID    INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  Barcode        VARCHAR(50) NOT NULL UNIQUE,
  Description    VARCHAR(255) NOT NULL,
  DepartmentID   INTEGER NOT NULL,
  SupplierID     INTEGER,
  CostPrice      DECIMAL(14,2) NOT NULL,
  MarkupPercent  DECIMAL(7,2) NOT NULL,
  RetailPrice    DECIMAL(14,2) COMPUTED BY (CostPrice * (1 + MarkupPercent / 100)),
  QuantityOnHand INTEGER DEFAULT 0 NOT NULL,
  FOREIGN KEY (DepartmentID) REFERENCES Department(DepartmentID),
  FOREIGN KEY (SupplierID)   REFERENCES Supplier(SupplierID)
);

CREATE TABLE StockTransaction (
  TransactionID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  StockItemID   INTEGER NOT NULL,
  ChangeQty     INTEGER NOT NULL,
  TransDate     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UserName      VARCHAR(50) NOT NULL,
  Reference     VARCHAR(100),
  FOREIGN KEY (StockItemID) REFERENCES StockItem(StockItemID)
);

CREATE TABLE Invoice (
  InvoiceNumber VARCHAR(30) PRIMARY KEY,
  InvoiceDate   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UserName      VARCHAR(50) NOT NULL,
  TotalAmount   DECIMAL(14,2) NOT NULL
);

CREATE TABLE InvoiceLine (
  LineID        INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  InvoiceNumber VARCHAR(30) NOT NULL,
  StockItemID   INTEGER NOT NULL,
  Quantity      INTEGER NOT NULL,
  UnitPrice     DECIMAL(14,2) NOT NULL,
  LineTotal     DECIMAL(14,2) COMPUTED BY (Quantity * UnitPrice),
  FOREIGN KEY (InvoiceNumber) REFERENCES Invoice(InvoiceNumber),
  FOREIGN KEY (StockItemID)   REFERENCES StockItem(StockItemID)
);

INSERT INTO Role (UserRoleName) VALUES ('admin');
INSERT INTO Role (UserRoleName) VALUES ('user');